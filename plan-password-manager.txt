
Step 1. 
write util function to get secrets manager client to avoid having to patch in our tests

Step 2.
write a handler function that decides which util function gets invoked depending on user input
function name = handler_function
takes 1 parameter (must be 1 of the following [e, r, d, l, x] )
if input not in list then return error message 'invalid input'

Step 2.
write util function to insert new secret into AWS secrets manager - this will take user input as arguements
function name - insert_secret
param 1 = Secret_identifier
param 2 = User_Id
param 3 = Password
JSON object with param2 and param 3 stored on the key of UserId & Passwordsosss
def insert_secret():
    secret_id = input('xxxx')

prints 'secret saved' on sucess
else handles client error or exception
if secret already exists either error OR give them the option to update existing secret

boto3 method = https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager/client/create_secret.html

Step 3.
write util function to list all of the stored secrets - this will provide a list of secret_identifiers stored in secrets manager
function name list_secrets
no parameters required

if list is length 0 return no secrets message
if list length > 0 return list of secret_identifiers

handles client error or exception

boto3 method = https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager/client/list_secrets.html


Step 4.
write util function to retrieve specified secret_identifier 
function name retrieve_secret
param1 = secret_identifier
will save contents of secret to a text file e.g secret_identifier.text
returns error if no such secret exists
handles client error
handles writing file error e.g if file already exists

boto3 method = https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager/client/get_secret_value.html

Step 5. 
write util function to delete specified secret_identifier
function name delete_secret
param1 = secret_identifier
will delete the specified secret
returns error if secret does not exists
returns error if client error

boto3 method = https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager/client/delete_secret.html


step 6. 
asks for another query at the end of each function to confirm if they want to exit or another process
return exit if user types x

